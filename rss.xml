<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Mihir's Blog]]></title><description><![CDATA[A blog about FrontEnd Development: TypeScript, React and GraphQL]]></description><link>https://minimal-blog.lekoarts.de</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 16 May 2022 06:02:58 GMT</lastBuildDate><item><title><![CDATA[How to reason about Binary Search properly]]></title><link>https://minimal-blog.lekoarts.de/how-to-reason-about-binary-search-properly</link><guid isPermaLink="false">https://minimal-blog.lekoarts.de/how-to-reason-about-binary-search-properly</guid><pubDate>Thu, 14 Apr 2022 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;1) Find the index of an element in a sorted array without duplicates: Code: Invariants: Invariant : If  target  is in  arr  then there…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://minimal-blog.lekoarts.de/how-to-reason-about-binary-search-properly&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Linked List]]></title><link>https://minimal-blog.lekoarts.de/linked-list</link><guid isPermaLink="false">https://minimal-blog.lekoarts.de/linked-list</guid><pubDate>Sat, 09 Apr 2022 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Linked List Introduction: A Linked List is a linear data strcture like arrays but what sets it apart from arrays is that the data is not…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://minimal-blog.lekoarts.de/linked-list&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Heap]]></title><link>https://minimal-blog.lekoarts.de/heap</link><guid isPermaLink="false">https://minimal-blog.lekoarts.de/heap</guid><pubDate>Fri, 08 Apr 2022 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Heap Introduction: Heap is a tree-based data structure. It is a complete tree in which all of the nodes of the tree follow specific order…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://minimal-blog.lekoarts.de/heap&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Blind 75]]></title><link>https://minimal-blog.lekoarts.de/blind-75</link><guid isPermaLink="false">https://minimal-blog.lekoarts.de/blind-75</guid><pubDate>Tue, 05 Apr 2022 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Two Sum Problem Statement: Given an array of integers  nums  and an integer  target , return indices of the two numbers such that they add…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://minimal-blog.lekoarts.de/blind-75&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item><item><title><![CDATA[Apollo Client Cheatsheet]]></title><link>https://minimal-blog.lekoarts.de/apollo-client-cheatsheet</link><guid isPermaLink="false">https://minimal-blog.lekoarts.de/apollo-client-cheatsheet</guid><pubDate>Tue, 28 Dec 2021 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Disclaimer :  This is a cheatsheet for apollo client, meant to help me quickly lookup the concepts with code snippets.
Most of the stuff…&lt;/p&gt;&lt;div style=&quot;margin-top: 50px; font-style: italic;&quot;&gt;&lt;strong&gt;&lt;a href=&quot;https://minimal-blog.lekoarts.de/apollo-client-cheatsheet&quot;&gt;Keep reading&lt;/a&gt;.&lt;/strong&gt;&lt;/div&gt;&lt;br /&gt; &lt;br /&gt;</content:encoded></item></channel></rss>